// Code generated by go-swagger; DO NOT EDIT.

package payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdatePaymentHandlerFunc turns a function with the right signature into a update payment handler
type UpdatePaymentHandlerFunc func(UpdatePaymentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdatePaymentHandlerFunc) Handle(params UpdatePaymentParams) middleware.Responder {
	return fn(params)
}

// UpdatePaymentHandler interface for that can handle valid update payment params
type UpdatePaymentHandler interface {
	Handle(UpdatePaymentParams) middleware.Responder
}

// NewUpdatePayment creates a new http.Handler for the update payment operation
func NewUpdatePayment(ctx *middleware.Context, handler UpdatePaymentHandler) *UpdatePayment {
	return &UpdatePayment{Context: ctx, Handler: handler}
}

/*UpdatePayment swagger:route PUT /payments/{paymentID} payment updatePayment

Update Payment

*/
type UpdatePayment struct {
	Context *middleware.Context
	Handler UpdatePaymentHandler
}

func (o *UpdatePayment) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdatePaymentParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
