// Code generated by go-swagger; DO NOT EDIT.

package payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/daesu/payments/gen/models"
)

// ListPaymentsOKCode is the HTTP code returned for type ListPaymentsOK
const ListPaymentsOKCode int = 200

/*ListPaymentsOK Success

swagger:response listPaymentsOK
*/
type ListPaymentsOK struct {

	/*
	  In: Body
	*/
	Payload *models.PaymentList `json:"body,omitempty"`
}

// NewListPaymentsOK creates ListPaymentsOK with default headers values
func NewListPaymentsOK() *ListPaymentsOK {

	return &ListPaymentsOK{}
}

// WithPayload adds the payload to the list payments o k response
func (o *ListPaymentsOK) WithPayload(payload *models.PaymentList) *ListPaymentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list payments o k response
func (o *ListPaymentsOK) SetPayload(payload *models.PaymentList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListPaymentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListPaymentsBadRequestCode is the HTTP code returned for type ListPaymentsBadRequest
const ListPaymentsBadRequestCode int = 400

/*ListPaymentsBadRequest Invalid request

swagger:response listPaymentsBadRequest
*/
type ListPaymentsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewListPaymentsBadRequest creates ListPaymentsBadRequest with default headers values
func NewListPaymentsBadRequest() *ListPaymentsBadRequest {

	return &ListPaymentsBadRequest{}
}

// WithPayload adds the payload to the list payments bad request response
func (o *ListPaymentsBadRequest) WithPayload(payload *models.ErrorResponse) *ListPaymentsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list payments bad request response
func (o *ListPaymentsBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListPaymentsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
